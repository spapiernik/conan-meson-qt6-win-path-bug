[
  {
    "name": "auto_features",
    "value": "auto",
    "section": "core",
    "machine": "any",
    "choices": [
      "enabled",
      "disabled",
      "auto"
    ],
    "type": "combo",
    "description": "Override value of all 'auto' features"
  },
  {
    "name": "backend",
    "value": "ninja",
    "section": "core",
    "machine": "any",
    "choices": [
      "ninja",
      "vs",
      "vs2010",
      "vs2012",
      "vs2013",
      "vs2015",
      "vs2017",
      "vs2019",
      "vs2022",
      "xcode",
      "none"
    ],
    "type": "combo",
    "description": "Backend to use"
  },
  {
    "name": "genvslite",
    "value": "vs2022",
    "section": "core",
    "machine": "any",
    "choices": [
      "vs2022"
    ],
    "type": "combo",
    "description": "Setup multiple buildtype-suffixed ninja-backend build directories, and a [builddir]_vs containing a Visual Studio meta-backend with multiple configurations that calls into them"
  },
  {
    "name": "buildtype",
    "value": "release",
    "section": "core",
    "machine": "any",
    "choices": [
      "plain",
      "debug",
      "debugoptimized",
      "release",
      "minsize",
      "custom"
    ],
    "type": "combo",
    "description": "Build type to use"
  },
  {
    "name": "debug",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Enable debug symbols and other information"
  },
  {
    "name": "default_library",
    "value": "static",
    "section": "core",
    "machine": "any",
    "choices": [
      "shared",
      "static",
      "both"
    ],
    "type": "combo",
    "description": "Default library type"
  },
  {
    "name": "default_both_libraries",
    "value": "shared",
    "section": "core",
    "machine": "any",
    "choices": [
      "shared",
      "static",
      "auto"
    ],
    "type": "combo",
    "description": "Default library type for both_libraries"
  },
  {
    "name": "install_umask",
    "value": 18,
    "section": "core",
    "machine": "any",
    "type": "integer",
    "description": "Default umask to apply on permissions of installed files"
  },
  {
    "name": "layout",
    "value": "mirror",
    "section": "core",
    "machine": "any",
    "choices": [
      "mirror",
      "flat"
    ],
    "type": "combo",
    "description": "Build directory layout"
  },
  {
    "name": "optimization",
    "value": "3",
    "section": "core",
    "machine": "any",
    "choices": [
      "plain",
      "0",
      "g",
      "1",
      "2",
      "3",
      "s"
    ],
    "type": "combo",
    "description": "Optimization level"
  },
  {
    "name": "prefer_static",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Whether to try static linking before shared linking"
  },
  {
    "name": "strip",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Strip targets on install"
  },
  {
    "name": "unity",
    "value": "off",
    "section": "core",
    "machine": "any",
    "choices": [
      "on",
      "off",
      "subprojects"
    ],
    "type": "combo",
    "description": "Unity build"
  },
  {
    "name": "unity_size",
    "value": 4,
    "section": "core",
    "machine": "any",
    "type": "integer",
    "description": "Unity block size"
  },
  {
    "name": "warning_level",
    "value": "1",
    "section": "core",
    "machine": "any",
    "choices": [
      "0",
      "1",
      "2",
      "3",
      "everything"
    ],
    "type": "combo",
    "description": "Compiler warning level to use"
  },
  {
    "name": "werror",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Treat warnings as errors"
  },
  {
    "name": "wrap_mode",
    "value": "nofallback",
    "section": "core",
    "machine": "any",
    "choices": [
      "default",
      "nofallback",
      "nodownload",
      "forcefallback",
      "nopromote"
    ],
    "type": "combo",
    "description": "Wrap mode"
  },
  {
    "name": "force_fallback_for",
    "value": [],
    "section": "core",
    "machine": "any",
    "type": "array",
    "description": "Force fallback for those subprojects"
  },
  {
    "name": "vsenv",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Activate Visual Studio environment"
  },
  {
    "name": "pkgconfig.relocatable",
    "value": false,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Generate pkgconfig files as relocatable"
  },
  {
    "name": "python.bytecompile",
    "value": 0,
    "section": "core",
    "machine": "any",
    "type": "integer",
    "description": "Whether to compile bytecode"
  },
  {
    "name": "python.install_env",
    "value": "prefix",
    "section": "core",
    "machine": "any",
    "choices": [
      "auto",
      "prefix",
      "system",
      "venv"
    ],
    "type": "combo",
    "description": "Which python environment to install to"
  },
  {
    "name": "python.platlibdir",
    "value": "",
    "section": "core",
    "machine": "any",
    "type": "string",
    "description": "Directory for site-specific, platform-specific files."
  },
  {
    "name": "python.purelibdir",
    "value": "",
    "section": "core",
    "machine": "any",
    "type": "string",
    "description": "Directory for site-specific, non-platform-specific files."
  },
  {
    "name": "python.allow_limited_api",
    "value": true,
    "section": "core",
    "machine": "any",
    "type": "boolean",
    "description": "Whether to allow use of the Python Limited API"
  },
  {
    "name": "pkg_config_path",
    "value": [
      "C:/Workspaces/cpp/qt6-app/build"
    ],
    "section": "core",
    "machine": "host",
    "type": "array",
    "description": "List of additional paths for pkg-config to search"
  },
  {
    "name": "cmake_prefix_path",
    "value": [],
    "section": "core",
    "machine": "host",
    "type": "array",
    "description": "List of additional prefixes for cmake to search"
  },
  {
    "name": "backend_max_links",
    "value": 0,
    "section": "backend",
    "machine": "any",
    "type": "integer",
    "description": "Maximum number of linker processes to run or 0 for no limit"
  },
  {
    "name": "b_sanitize",
    "value": [],
    "section": "base",
    "machine": "any",
    "type": "array",
    "description": "Code sanitizer to use"
  },
  {
    "name": "b_ndebug",
    "value": "true",
    "section": "base",
    "machine": "any",
    "choices": [
      "true",
      "false",
      "if-release"
    ],
    "type": "combo",
    "description": "Disable asserts"
  },
  {
    "name": "b_pch",
    "value": true,
    "section": "base",
    "machine": "any",
    "type": "boolean",
    "description": "Use precompiled headers"
  },
  {
    "name": "b_vscrt",
    "value": "md",
    "section": "base",
    "machine": "any",
    "choices": [
      "none",
      "md",
      "mdd",
      "mt",
      "mtd",
      "from_buildtype",
      "static_from_buildtype"
    ],
    "type": "combo",
    "description": "VS run-time library type to use."
  },
  {
    "name": "cpp_args",
    "value": [],
    "section": "compiler",
    "machine": "host",
    "type": "array",
    "description": "Extra arguments passed to the cpp compiler"
  },
  {
    "name": "cpp_link_args",
    "value": [],
    "section": "compiler",
    "machine": "host",
    "type": "array",
    "description": "Extra arguments passed to the cpp linker"
  },
  {
    "name": "cpp_std",
    "value": "vc++20",
    "section": "compiler",
    "machine": "host",
    "choices": [
      "none",
      "none",
      "c++11",
      "vc++11",
      "c++14",
      "c++latest",
      "vc++latest",
      "vc++14",
      "c++17",
      "vc++17",
      "c++20",
      "vc++20"
    ],
    "type": "combo",
    "description": "cpp language standard to use"
  },
  {
    "name": "cpp_eh",
    "value": "default",
    "section": "compiler",
    "machine": "host",
    "choices": [
      "none",
      "default",
      "a",
      "s",
      "sc"
    ],
    "type": "combo",
    "description": "C++ exception handling type."
  },
  {
    "name": "cpp_rtti",
    "value": true,
    "section": "compiler",
    "machine": "host",
    "type": "boolean",
    "description": "Enable RTTI"
  },
  {
    "name": "cpp_winlibs",
    "value": [
      "kernel32.lib",
      "user32.lib",
      "gdi32.lib",
      "winspool.lib",
      "shell32.lib",
      "ole32.lib",
      "oleaut32.lib",
      "uuid.lib",
      "comdlg32.lib",
      "advapi32.lib"
    ],
    "section": "compiler",
    "machine": "host",
    "type": "array",
    "description": "Standard Win libraries to link against"
  },
  {
    "name": "prefix",
    "value": "c:/",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Installation prefix"
  },
  {
    "name": "bindir",
    "value": "bin",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Executable directory"
  },
  {
    "name": "datadir",
    "value": "share",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Data file directory"
  },
  {
    "name": "includedir",
    "value": "include",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Header file directory"
  },
  {
    "name": "infodir",
    "value": "share/info",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Info page directory"
  },
  {
    "name": "libdir",
    "value": "lib",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Library directory"
  },
  {
    "name": "licensedir",
    "value": "",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Licenses directory"
  },
  {
    "name": "libexecdir",
    "value": "bin",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Library executable directory"
  },
  {
    "name": "localedir",
    "value": "share/locale",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Locale data directory"
  },
  {
    "name": "localstatedir",
    "value": "var",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Localstate data directory"
  },
  {
    "name": "mandir",
    "value": "share/man",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Manual page directory"
  },
  {
    "name": "sbindir",
    "value": "bin",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "System executable directory"
  },
  {
    "name": "sharedstatedir",
    "value": "com",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Architecture-independent data directory"
  },
  {
    "name": "sysconfdir",
    "value": "etc",
    "section": "directory",
    "machine": "any",
    "type": "string",
    "description": "Sysconf data directory"
  },
  {
    "name": "errorlogs",
    "value": true,
    "section": "test",
    "machine": "any",
    "type": "boolean",
    "description": "Whether to print the logs from failing tests"
  },
  {
    "name": "stdsplit",
    "value": true,
    "section": "test",
    "machine": "any",
    "type": "boolean",
    "description": "Split stdout and stderr in test logs"
  }
]