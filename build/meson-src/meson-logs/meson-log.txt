Build started at 2025-09-06T13:26:25.603683
Main binary: C:\Users\spapi\AppData\Roaming\uv\tools\meson\Scripts\python.exe
Build Options: --native-file=build/conan_meson_native.ini
Python system: Windows
The Meson build system
Version: 1.9.0
Source dir: C:\Users\spapi\workspaces\cpp\qt6-app
Build dir: C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src
Build type: native build
Project name: my_qt6_app
Project version: undefined
-----------
Detecting compiler via: `cl /?` -> 0
stdout:
C/C++ COMPILER OPTIONS


                              -OPTIMIZATION-

/O1 maximum optimizations (favor space) /O2 maximum optimizations (favor speed)
/Ob<n> inline expansion (default n=0)   /Od disable optimizations (default)
/Og enable global optimization          /Oi[-] enable intrinsic functions
/Os favor code space                    /Ot favor code speed
/Ox optimizations (favor speed)         
/favor:<blend|AMD64|INTEL64|ATOM> select processor to optimize for, one of:
    blend - a combination of optimizations for several different x64 processors
    AMD64 - 64-bit AMD processors
    INTEL64 - Intel(R)64 architecture processors
    ATOM - Intel(R) Atom(TM) processors

                             -CODE GENERATION-

/Gu[-] ensure distinct functions have distinct addresses
/Gw[-] separate global variables for linker
/GF enable read-only string pooling     /Gy[-] separate functions for linker
/GS[-] enable security checks           /GR[-] enable C++ RTTI
/guard:cf[-] enable CFG (control flow guard)
/guard:ehcont[-] enable EH continuation metadata (CET)
/EHs enable C++ EH (no SEH exceptions)  /EHa enable C++ EH (w/ SEH exceptions)
/EHc extern "C" defaults to nothrow     
/EHr always generate noexcept runtime termination checks
/fp:<contract|except[-]|fast|precise|strict> choose floating-point model:
    contract - consider floating-point contractions when generating code
    except[-] - consider floating-point exceptions when generating code
    fast - "fast" floating-point model; results are less predictable
    precise - "precise" floating-point model; results are predictable
    strict - "strict" floating-point model (implies /fp:except)
/Qfast_transcendentals generate inline FP intrinsics even with /fp:except
/Qspectre[-] enable mitigations for CVE 2017-5753
/Qpar[-] enable parallel code generation
/Qpar-report:1 auto-parallelizer diagnostic; indicate parallelized loops
/Qpar-report:2 auto-parallelizer diagnostic; indicate loops not parallelized
/Qvec-report:1 auto-vectorizer diagnostic; indicate vectorized loops
/Qvec-report:2 auto-vectorizer diagnostic; indicate loops not vectorized
/GL[-] enable link-time code generation 
/volatile:<iso|ms> choose volatile model:
    iso - Acquire/release semantics not guaranteed on volatile accesses
    ms  - Acquire/release semantics guaranteed on volatile accesses
/GA optimize for Windows Application    /Ge force stack checking for all funcs
/Gs[num] control stack checking calls   /Gh enable _penter function call
/GH enable _pexit function call         /GT generate fiber-safe TLS accesses
/RTC1 Enable fast checks (/RTCsu)       /RTCc Convert to smaller type checks
/RTCs Stack Frame runtime checking      /RTCu Uninitialized local usage checks
/clr[:option] compile for common language runtime, where option is:
    pure : produce IL-only output file (no native executable code)
    safe : produce IL-only verifiable output file
    netcore : produce assemblies targeting .NET Core runtime
    noAssembly : do not produce an assembly
    nostdlib : ignore the system .NET framework directory when searching for assemblies
    nostdimport : do not import any required assemblies implicitly
    initialAppDomain : enable initial AppDomain behavior of Visual C++ 2002
    implicitKeepAlive- : turn off implicit emission of System::GC::KeepAlive(this)
    char_t- : turn off metadata support for char8_t, char16_t and char32_t
    ECMAParamArray : use rules specified in ECMA-372/14.6 for overloads with parameter arrays (implied by /clr)
    ECMAParamArray- : use new rules for overloads with parameter arrays (implied by /clr:netcore)
/fsanitize=address Enable address sanitizer codegen
/homeparams Force parameters passed in registers to be written to the stack
/GZ Enable stack checks (/RTCs)         /Gv __vectorcall calling convention
(Preview) /dynamicdeopt Enable dynamic debugging; place deoptimized breakpoints and step in anywhere with on-demand function deoptimization
(Preview) /dynamicdeopt:suffix <suffix> File extension suffix for deoptimized output (default: .alt)
(Preview) /dynamicdeopt:sync Build deoptimized output after optimized output instead of in parallel
/arch:<SSE2|SSE4.2|AVX|AVX2|AVX512|AVX10.x> minimum CPU architecture requirements, one of:
   SSE2 - (default) enable use of instructions available with SSE2-enabled CPUs
   SSE4.2 - enable use of instructions available with SSE 4.2-enabled CPUs
   AVX - enable use of instructions available with AVX-enabled CPUs
   AVX2 - enable use of instructions available with AVX2-enabled CPUs
   AVX512 - enable use of instructions available with AVX-512-enabled CPUs
   AVX10.x - enable use of instructions available with AVX10.x-enabled CPUs. Valid values of x are 1
/QIntel-jcc-erratum enable mitigations for Intel JCC erratum
/Qspectre-load Enable spectre mitigations for all instructions which load memory
/Qspectre-load-cf Enable spectre mitigations for all control-flow instructions which load memory
/Qspectre-jmp[-] Enable spectre mitigations for unconditional jump instructions
/fpcvt:<IA|BC> FP to unsigned integer conversion compatibility
   IA - results compatible with VCVTTSD2USI instruction
   BC - results compatible with VS2017 and earlier compiler
/jumptablerdata Place jump tables for switch case statements in .rdata section
/vlen=<256|512> Choose vector length of either 256 or 512 for automatic code-generation
/vlen Choose default vector length based on /arch setting

                              -OUTPUT FILES-

/Fa[file] name assembly listing file    /FA[scu] configure assembly listing
/Fd[file] name .PDB file                /Fe<file> name executable file
/Fm[file] name map file                 /Fo<file> name object file
/Fp<file> name precompiled header file  /Fr[file] name source browser file
/FR[file] name extended .SBR file       /Fi[file] name preprocessed file
/Fd: <file> name .PDB file              /Fe: <file> name executable file
/Fm: <file> name map file               /Fo: <file> name object file
/Fp: <file> name .PCH file              /FR: <file> name extended .SBR file
/Fi: <file> name preprocessed file      
/Ft<dir> location of the header files generated for #import
/doc[file] process XML documentation comments and optionally name the .xdc file

                              -PREPROCESSOR-

/AI<dir> add to assembly search path    /FU<file> import .NET assembly/module
/FU:asFriend<file> import .NET assembly/module as friend
/C don't strip comments                 /D<name>{=|#}<text> define macro
/E preprocess to stdout                 /EP preprocess to stdout, no #line
/P preprocess to file                   /Fx merge injected code to file
/FI<file> name forced include file      /U<name> remove predefined macro
/u remove all predefined macros         /I<dir> add to include search path
/X ignore "standard places"             
/PH generate #pragma file_hash when preprocessing
/PD print all macro definitions         

                                -LANGUAGE-

/std:<c++14|c++17|c++20|c++latest> C++ standard version
    c++14 - ISO/IEC 14882:2014 (default)
    c++17 - ISO/IEC 14882:2017
    c++20 - ISO/IEC 14882:2020
    c++latest - latest draft standard (feature set subject to change)
/std:<c11|c17|clatest> C standard version
    c11 - ISO/IEC 9899:2011
    c17 - ISO/IEC 9899:2018
    clatest - latest draft standard (feature set subject to change)
/permissive[-] enable some nonconforming code to compile
               (feature set subject to change) (off by default in C++20 and later)
/Za disable extensions (not recommended for C++)
/ZW enable WinRT language extensions    /Zs syntax check only
/await enable resumable functions extension
/await:strict enable standard C++20 coroutine support with earlier language versions
/constexpr:depth<N>     recursion depth limit for constexpr evaluation (default: 512)
/constexpr:backtrace<N> show N constexpr evaluations in diagnostics (default: 10)
/constexpr:steps<N>     terminate constexpr evaluation after N steps (default: 1048576)
/Zi enable debugging information        /Z7 enable old-style debug info
/Zo[-] generate richer debugging information for optimized code (on by default)
/ZH:[MD5|SHA1|SHA_256] hash algorithm for calculation of file checksum in debug info (default: SHA_256)
/Zp[n] pack structs on n-byte boundary  /Zl omit default library name in .OBJ
/vd{0|1|2} disable/enable vtordisp      /vm<x> type of pointers to members
/Zc:arg1[,arg2] language conformance, where arguments can be:
  forScope[-]           enforce Standard C++ for scoping rules
  wchar_t[-]            wchar_t is the native type, not a typedef
  auto[-]               enforce the new Standard C++ meaning for auto
  trigraphs[-]          enable trigraphs (off by default)
  rvalueCast[-]         enforce Standard C++ explicit type conversion rules
                        (on by default in C++20 or later, implied by /permissive-)
  strictStrings[-]      disable string-literal to [char|wchar_t]*
                        conversion (on by default in C++20 or later, implied by /permissive-)
  implicitNoexcept[-]   enable implicit noexcept on required functions
  threadSafeInit[-]     enable thread-safe local static initialization
  inline[-]             remove unreferenced function or data if it is
                        COMDAT or has internal linkage only (off by default)
  sizedDealloc[-]       enable C++14 global sized deallocation
                        functions (on by default)
  throwingNew[-]        assume operator new throws on failure (off by default)
  referenceBinding[-]   a temporary will not bind to a non-const
                        lvalue reference (on by default in C++20 or later, implied by /permissive-)
  twoPhase-             disable two-phase name lookup
  ternary[-]            enforce C++11 rules for conditional operator
                        (on by default in C++20 or later, implied by /permissive-)
  noexceptTypes[-]      enforce C++17 noexcept rules (on by default in C++17 or later)
  alignedNew[-]         enable C++17 alignment of dynamically allocated objects (on by default)
  hiddenFriend[-]       enforce Standard C++ hidden friend rules
                        (on by default in C++20 or later, implied by /permissive-)
  externC[-]            enforce Standard C++ rules for 'extern "C"' functions
                        (on by default in C++20 or later, implied by /permissive-)
  lambda[-]             better lambda support by using the newer lambda processor
                        (on by default in C++20 or later, implied by /permissive-)
  tlsGuards[-]          generate runtime checks for TLS variable initialization (on by default)
  zeroSizeArrayNew[-]   call member new/delete for 0-size arrays of objects (on by default)
  static_assert[-]      strict handling of 'static_assert' (on by default in C++20 or later,
                        implied by /permissive-)
  gotoScope[-]          cannot jump past the initialization of a variable (implied by /permissive-)
  templateScope[-]      enforce Standard C++ template parameter shadowing rules
  enumTypes[-]          enable Standard C++ underlying enum types (off by default)
  checkGwOdr[-]         enforce Standard C++ one definition rule violations
                        when /Gw has been enabled (off by default)
  nrvo[-]               enable optional copy and move elision (on by default in C++20 or later,
                        implied by /permissive- or /O2)
  __STDC__              define __STDC__ to 1 in C
  __cplusplus[-]        __cplusplus macro reports the supported C++ standard (off by default)
  char8_t[-]            enable C++20 native `u8` literal support as `const char8_t`
                        (on by default in C++20 or later)
  externConstexpr[-]    enable external linkage for constexpr variables in C++
                        (on by default in C++20 or later, implied by /permissive-)
  preprocessor[-]       enable standard conforming preprocessor in C/C++
                        (on by default in C11 or later)
/ZI enable Edit and Continue debug info 
/openmp enable OpenMP 2.0 language extensions
/openmp:experimental enable OpenMP 2.0 language extensions plus select OpenMP 3.0+ language extensions
/openmp:llvm OpenMP language extensions using LLVM runtime

                              -MISCELLANEOUS-

@<file> options response file           /?, /help print this help message
/bigobj generate extended object format /c compile only, no link
/FC use full pathnames in diagnostics   /H<num> max external name length
/J default char type is unsigned        
/MP[n] use up to 'n' processes for compilation
/nologo suppress copyright message      /showIncludes show include file names
/Tc<source file> compile file as .c     /Tp<source file> compile file as .cpp
/TC compile all files as .c             /TP compile all files as .cpp
/V<string> set version string           /Yc[file] create .PCH file
/Yd put debug info in every .OBJ        /Yl[sym] inject .PCH ref for debug lib
/Yu[file] use .PCH file                 /Y- disable all PCH options
/Zm<n> max memory alloc (% of default)  /FS force to use MSPDBSRV.EXE
/source-charset:<iana-name>|.nnnn set source character set
/execution-charset:<iana-name>|.nnnn set execution character set
/utf-8 set source and execution character set to UTF-8
/validate-charset[-] validate UTF-8 files for only legal characters
/fastfail[-] enable fast-fail mode      /JMC[-] enable native just my code
/presetPadding[-] zero initialize padding for stack based class types
/volatileMetadata[-] generate metadata on volatile memory accesses
/sourcelink [file] file containing source link information

                                -LINKING-

/LD Create .DLL                         /LDd Create .DLL debug library
/LN Create a .netmodule                 /F<num> set stack size
/link [linker options and libraries]    /MD link with MSVCRT.LIB
/MT link with LIBCMT.LIB                /MDd link with MSVCRTD.LIB debug lib
/MTd link with LIBCMTD.LIB debug lib    

                              -CODE ANALYSIS-

/analyze[-] Enable native analysis      /analyze:quiet[-] No warning to console
/analyze:log<name> Warnings to file     /analyze:autolog Log to *.pftlog
/analyze:autolog:ext<ext> Log to *.<ext>/analyze:autolog- No log file
/analyze:WX- Warnings not fatal         /analyze:stacksize<num> Max stack frame
/analyze:max_paths<num> Max paths       /analyze:only Analyze, no code gen

                              -DIAGNOSTICS-

/diagnostics:<args,...> controls the format of diagnostic messages:
             classic   - retains prior format
             column[-] - prints column information
             caret[-]  - prints column and the indicated line of source
/Wall enable all warnings               /w   disable all warnings
/W<n> set warning level (default n=1)   
/Wv:xx[.yy[.zzzzz]] disable warnings introduced after version xx.yy.zzzzz
/WX treat warnings as errors            /WL enable one line diagnostics
/wd<n> disable warning n                /we<n> treat warning n as an error
/wo<n> issue warning n once             /w<l><n> set warning level 1-4 for n
/external:I <path>      - location of external headers
/external:env:<var>     - environment variable with locations of external headers
/external:anglebrackets - treat all headers included via <> as external
/external:W<n>          - warning level for external headers
/external:templates[-]  - evaluate warning level across template instantiation chain
/sdl enable additional security features and warnings
/options:strict unrecognized compiler options are an error
-----------
stderr:
Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.
-----------
Sanity testing C++ compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl sanitycheckcpp.cc /Fesanitycheckcpp.exe /MD /nologo /showIncludes /utf-8 /Zc:__cplusplus /link
Sanity check compile stdout:
sanitycheckcpp.cc

-----
Sanity check compile stderr:

-----
Running test binary command:  C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\sanitycheckcpp.exe
-----------
Sanity check: `C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\sanitycheckcpp.exe` -> 0
C++ compiler for the host machine: cl (msvc 19.44.35215 "Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64")
C++ linker for the host machine: link link 14.44.35215.0
-----------
Detecting archiver via: `lib /?` -> 1100
stdout:
Microsoft (R) Library Manager Version 14.44.35215.0
Copyright (C) Microsoft Corporation.  All rights reserved.

usage: LIB [options] [files]

   options:

      /DEF[:filename]
      /ERRORREPORT:{NONE|PROMPT|QUEUE|SEND}
      /EXPORT:symbol
      /EXTRACT:membername
      /INCLUDE:symbol
      /LIBPATH:dir
      /LINKREPRO:dir
      /LINKREPROFULLPATHRSP:filename
      /LINKREPROTARGET:filename
      /LIST[:filename]
      /LTCG
      /MACHINE:{ARM|ARM64|ARM64X|EBC|X64|X86}
      /NAME:filename
      /NODEFAULTLIB[:library]
      /NOLOGO
      /OUT:filename
      /REMOVE:membername
      /SUBSYSTEM:{BOOT_APPLICATION|CONSOLE|EFI_APPLICATION|
                  EFI_BOOT_SERVICE_DRIVER|EFI_ROM|EFI_RUNTIME_DRIVER|
                  NATIVE|POSIX|WINDOWS|WINDOWSCE}[,#[.##]]
      /VERBOSE
      /WX[:NO]
      /WX[:nnnn[,nnnn...]]
-----------
-----------
Detecting compiler via: `cl /?` -> 0
stdout:
C/C++ COMPILER OPTIONS


                              -OPTIMIZATION-

/O1 maximum optimizations (favor space) /O2 maximum optimizations (favor speed)
/Ob<n> inline expansion (default n=0)   /Od disable optimizations (default)
/Og enable global optimization          /Oi[-] enable intrinsic functions
/Os favor code space                    /Ot favor code speed
/Ox optimizations (favor speed)         
/favor:<blend|AMD64|INTEL64|ATOM> select processor to optimize for, one of:
    blend - a combination of optimizations for several different x64 processors
    AMD64 - 64-bit AMD processors
    INTEL64 - Intel(R)64 architecture processors
    ATOM - Intel(R) Atom(TM) processors

                             -CODE GENERATION-

/Gu[-] ensure distinct functions have distinct addresses
/Gw[-] separate global variables for linker
/GF enable read-only string pooling     /Gy[-] separate functions for linker
/GS[-] enable security checks           /GR[-] enable C++ RTTI
/guard:cf[-] enable CFG (control flow guard)
/guard:ehcont[-] enable EH continuation metadata (CET)
/EHs enable C++ EH (no SEH exceptions)  /EHa enable C++ EH (w/ SEH exceptions)
/EHc extern "C" defaults to nothrow     
/EHr always generate noexcept runtime termination checks
/fp:<contract|except[-]|fast|precise|strict> choose floating-point model:
    contract - consider floating-point contractions when generating code
    except[-] - consider floating-point exceptions when generating code
    fast - "fast" floating-point model; results are less predictable
    precise - "precise" floating-point model; results are predictable
    strict - "strict" floating-point model (implies /fp:except)
/Qfast_transcendentals generate inline FP intrinsics even with /fp:except
/Qspectre[-] enable mitigations for CVE 2017-5753
/Qpar[-] enable parallel code generation
/Qpar-report:1 auto-parallelizer diagnostic; indicate parallelized loops
/Qpar-report:2 auto-parallelizer diagnostic; indicate loops not parallelized
/Qvec-report:1 auto-vectorizer diagnostic; indicate vectorized loops
/Qvec-report:2 auto-vectorizer diagnostic; indicate loops not vectorized
/GL[-] enable link-time code generation 
/volatile:<iso|ms> choose volatile model:
    iso - Acquire/release semantics not guaranteed on volatile accesses
    ms  - Acquire/release semantics guaranteed on volatile accesses
/GA optimize for Windows Application    /Ge force stack checking for all funcs
/Gs[num] control stack checking calls   /Gh enable _penter function call
/GH enable _pexit function call         /GT generate fiber-safe TLS accesses
/RTC1 Enable fast checks (/RTCsu)       /RTCc Convert to smaller type checks
/RTCs Stack Frame runtime checking      /RTCu Uninitialized local usage checks
/clr[:option] compile for common language runtime, where option is:
    pure : produce IL-only output file (no native executable code)
    safe : produce IL-only verifiable output file
    netcore : produce assemblies targeting .NET Core runtime
    noAssembly : do not produce an assembly
    nostdlib : ignore the system .NET framework directory when searching for assemblies
    nostdimport : do not import any required assemblies implicitly
    initialAppDomain : enable initial AppDomain behavior of Visual C++ 2002
    implicitKeepAlive- : turn off implicit emission of System::GC::KeepAlive(this)
    char_t- : turn off metadata support for char8_t, char16_t and char32_t
    ECMAParamArray : use rules specified in ECMA-372/14.6 for overloads with parameter arrays (implied by /clr)
    ECMAParamArray- : use new rules for overloads with parameter arrays (implied by /clr:netcore)
/fsanitize=address Enable address sanitizer codegen
/homeparams Force parameters passed in registers to be written to the stack
/GZ Enable stack checks (/RTCs)         /Gv __vectorcall calling convention
(Preview) /dynamicdeopt Enable dynamic debugging; place deoptimized breakpoints and step in anywhere with on-demand function deoptimization
(Preview) /dynamicdeopt:suffix <suffix> File extension suffix for deoptimized output (default: .alt)
(Preview) /dynamicdeopt:sync Build deoptimized output after optimized output instead of in parallel
/arch:<SSE2|SSE4.2|AVX|AVX2|AVX512|AVX10.x> minimum CPU architecture requirements, one of:
   SSE2 - (default) enable use of instructions available with SSE2-enabled CPUs
   SSE4.2 - enable use of instructions available with SSE 4.2-enabled CPUs
   AVX - enable use of instructions available with AVX-enabled CPUs
   AVX2 - enable use of instructions available with AVX2-enabled CPUs
   AVX512 - enable use of instructions available with AVX-512-enabled CPUs
   AVX10.x - enable use of instructions available with AVX10.x-enabled CPUs. Valid values of x are 1
/QIntel-jcc-erratum enable mitigations for Intel JCC erratum
/Qspectre-load Enable spectre mitigations for all instructions which load memory
/Qspectre-load-cf Enable spectre mitigations for all control-flow instructions which load memory
/Qspectre-jmp[-] Enable spectre mitigations for unconditional jump instructions
/fpcvt:<IA|BC> FP to unsigned integer conversion compatibility
   IA - results compatible with VCVTTSD2USI instruction
   BC - results compatible with VS2017 and earlier compiler
/jumptablerdata Place jump tables for switch case statements in .rdata section
/vlen=<256|512> Choose vector length of either 256 or 512 for automatic code-generation
/vlen Choose default vector length based on /arch setting

                              -OUTPUT FILES-

/Fa[file] name assembly listing file    /FA[scu] configure assembly listing
/Fd[file] name .PDB file                /Fe<file> name executable file
/Fm[file] name map file                 /Fo<file> name object file
/Fp<file> name precompiled header file  /Fr[file] name source browser file
/FR[file] name extended .SBR file       /Fi[file] name preprocessed file
/Fd: <file> name .PDB file              /Fe: <file> name executable file
/Fm: <file> name map file               /Fo: <file> name object file
/Fp: <file> name .PCH file              /FR: <file> name extended .SBR file
/Fi: <file> name preprocessed file      
/Ft<dir> location of the header files generated for #import
/doc[file] process XML documentation comments and optionally name the .xdc file

                              -PREPROCESSOR-

/AI<dir> add to assembly search path    /FU<file> import .NET assembly/module
/FU:asFriend<file> import .NET assembly/module as friend
/C don't strip comments                 /D<name>{=|#}<text> define macro
/E preprocess to stdout                 /EP preprocess to stdout, no #line
/P preprocess to file                   /Fx merge injected code to file
/FI<file> name forced include file      /U<name> remove predefined macro
/u remove all predefined macros         /I<dir> add to include search path
/X ignore "standard places"             
/PH generate #pragma file_hash when preprocessing
/PD print all macro definitions         

                                -LANGUAGE-

/std:<c++14|c++17|c++20|c++latest> C++ standard version
    c++14 - ISO/IEC 14882:2014 (default)
    c++17 - ISO/IEC 14882:2017
    c++20 - ISO/IEC 14882:2020
    c++latest - latest draft standard (feature set subject to change)
/std:<c11|c17|clatest> C standard version
    c11 - ISO/IEC 9899:2011
    c17 - ISO/IEC 9899:2018
    clatest - latest draft standard (feature set subject to change)
/permissive[-] enable some nonconforming code to compile
               (feature set subject to change) (off by default in C++20 and later)
/Za disable extensions (not recommended for C++)
/ZW enable WinRT language extensions    /Zs syntax check only
/await enable resumable functions extension
/await:strict enable standard C++20 coroutine support with earlier language versions
/constexpr:depth<N>     recursion depth limit for constexpr evaluation (default: 512)
/constexpr:backtrace<N> show N constexpr evaluations in diagnostics (default: 10)
/constexpr:steps<N>     terminate constexpr evaluation after N steps (default: 1048576)
/Zi enable debugging information        /Z7 enable old-style debug info
/Zo[-] generate richer debugging information for optimized code (on by default)
/ZH:[MD5|SHA1|SHA_256] hash algorithm for calculation of file checksum in debug info (default: SHA_256)
/Zp[n] pack structs on n-byte boundary  /Zl omit default library name in .OBJ
/vd{0|1|2} disable/enable vtordisp      /vm<x> type of pointers to members
/Zc:arg1[,arg2] language conformance, where arguments can be:
  forScope[-]           enforce Standard C++ for scoping rules
  wchar_t[-]            wchar_t is the native type, not a typedef
  auto[-]               enforce the new Standard C++ meaning for auto
  trigraphs[-]          enable trigraphs (off by default)
  rvalueCast[-]         enforce Standard C++ explicit type conversion rules
                        (on by default in C++20 or later, implied by /permissive-)
  strictStrings[-]      disable string-literal to [char|wchar_t]*
                        conversion (on by default in C++20 or later, implied by /permissive-)
  implicitNoexcept[-]   enable implicit noexcept on required functions
  threadSafeInit[-]     enable thread-safe local static initialization
  inline[-]             remove unreferenced function or data if it is
                        COMDAT or has internal linkage only (off by default)
  sizedDealloc[-]       enable C++14 global sized deallocation
                        functions (on by default)
  throwingNew[-]        assume operator new throws on failure (off by default)
  referenceBinding[-]   a temporary will not bind to a non-const
                        lvalue reference (on by default in C++20 or later, implied by /permissive-)
  twoPhase-             disable two-phase name lookup
  ternary[-]            enforce C++11 rules for conditional operator
                        (on by default in C++20 or later, implied by /permissive-)
  noexceptTypes[-]      enforce C++17 noexcept rules (on by default in C++17 or later)
  alignedNew[-]         enable C++17 alignment of dynamically allocated objects (on by default)
  hiddenFriend[-]       enforce Standard C++ hidden friend rules
                        (on by default in C++20 or later, implied by /permissive-)
  externC[-]            enforce Standard C++ rules for 'extern "C"' functions
                        (on by default in C++20 or later, implied by /permissive-)
  lambda[-]             better lambda support by using the newer lambda processor
                        (on by default in C++20 or later, implied by /permissive-)
  tlsGuards[-]          generate runtime checks for TLS variable initialization (on by default)
  zeroSizeArrayNew[-]   call member new/delete for 0-size arrays of objects (on by default)
  static_assert[-]      strict handling of 'static_assert' (on by default in C++20 or later,
                        implied by /permissive-)
  gotoScope[-]          cannot jump past the initialization of a variable (implied by /permissive-)
  templateScope[-]      enforce Standard C++ template parameter shadowing rules
  enumTypes[-]          enable Standard C++ underlying enum types (off by default)
  checkGwOdr[-]         enforce Standard C++ one definition rule violations
                        when /Gw has been enabled (off by default)
  nrvo[-]               enable optional copy and move elision (on by default in C++20 or later,
                        implied by /permissive- or /O2)
  __STDC__              define __STDC__ to 1 in C
  __cplusplus[-]        __cplusplus macro reports the supported C++ standard (off by default)
  char8_t[-]            enable C++20 native `u8` literal support as `const char8_t`
                        (on by default in C++20 or later)
  externConstexpr[-]    enable external linkage for constexpr variables in C++
                        (on by default in C++20 or later, implied by /permissive-)
  preprocessor[-]       enable standard conforming preprocessor in C/C++
                        (on by default in C11 or later)
/ZI enable Edit and Continue debug info 
/openmp enable OpenMP 2.0 language extensions
/openmp:experimental enable OpenMP 2.0 language extensions plus select OpenMP 3.0+ language extensions
/openmp:llvm OpenMP language extensions using LLVM runtime

                              -MISCELLANEOUS-

@<file> options response file           /?, /help print this help message
/bigobj generate extended object format /c compile only, no link
/FC use full pathnames in diagnostics   /H<num> max external name length
/J default char type is unsigned        
/MP[n] use up to 'n' processes for compilation
/nologo suppress copyright message      /showIncludes show include file names
/Tc<source file> compile file as .c     /Tp<source file> compile file as .cpp
/TC compile all files as .c             /TP compile all files as .cpp
/V<string> set version string           /Yc[file] create .PCH file
/Yd put debug info in every .OBJ        /Yl[sym] inject .PCH ref for debug lib
/Yu[file] use .PCH file                 /Y- disable all PCH options
/Zm<n> max memory alloc (% of default)  /FS force to use MSPDBSRV.EXE
/source-charset:<iana-name>|.nnnn set source character set
/execution-charset:<iana-name>|.nnnn set execution character set
/utf-8 set source and execution character set to UTF-8
/validate-charset[-] validate UTF-8 files for only legal characters
/fastfail[-] enable fast-fail mode      /JMC[-] enable native just my code
/presetPadding[-] zero initialize padding for stack based class types
/volatileMetadata[-] generate metadata on volatile memory accesses
/sourcelink [file] file containing source link information

                                -LINKING-

/LD Create .DLL                         /LDd Create .DLL debug library
/LN Create a .netmodule                 /F<num> set stack size
/link [linker options and libraries]    /MD link with MSVCRT.LIB
/MT link with LIBCMT.LIB                /MDd link with MSVCRTD.LIB debug lib
/MTd link with LIBCMTD.LIB debug lib    

                              -CODE ANALYSIS-

/analyze[-] Enable native analysis      /analyze:quiet[-] No warning to console
/analyze:log<name> Warnings to file     /analyze:autolog Log to *.pftlog
/analyze:autolog:ext<ext> Log to *.<ext>/analyze:autolog- No log file
/analyze:WX- Warnings not fatal         /analyze:stacksize<num> Max stack frame
/analyze:max_paths<num> Max paths       /analyze:only Analyze, no code gen

                              -DIAGNOSTICS-

/diagnostics:<args,...> controls the format of diagnostic messages:
             classic   - retains prior format
             column[-] - prints column information
             caret[-]  - prints column and the indicated line of source
/Wall enable all warnings               /w   disable all warnings
/W<n> set warning level (default n=1)   
/Wv:xx[.yy[.zzzzz]] disable warnings introduced after version xx.yy.zzzzz
/WX treat warnings as errors            /WL enable one line diagnostics
/wd<n> disable warning n                /we<n> treat warning n as an error
/wo<n> issue warning n once             /w<l><n> set warning level 1-4 for n
/external:I <path>      - location of external headers
/external:env:<var>     - environment variable with locations of external headers
/external:anglebrackets - treat all headers included via <> as external
/external:W<n>          - warning level for external headers
/external:templates[-]  - evaluate warning level across template instantiation chain
/sdl enable additional security features and warnings
/options:strict unrecognized compiler options are an error
-----------
stderr:
Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.
-----------
Sanity testing C++ compiler: cl
Is cross compiler: False.
Sanity check compiler command line: cl sanitycheckcpp.cc /Fesanitycheckcpp.exe /MD /nologo /showIncludes /utf-8 /Zc:__cplusplus /link
Sanity check compile stdout:
sanitycheckcpp.cc

-----
Sanity check compile stderr:

-----
Running test binary command:  C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\sanitycheckcpp.exe
-----------
Sanity check: `C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\sanitycheckcpp.exe` -> 0
C++ compiler for the build machine: cl (msvc 19.44.35215 "Microsoft (R) C/C++ Optimizing Compiler Version 19.44.35215 for x64")
C++ linker for the build machine: link link 14.44.35215.0
-----------
Detecting archiver via: `lib /?` -> 1100
stdout:
Microsoft (R) Library Manager Version 14.44.35215.0
Copyright (C) Microsoft Corporation.  All rights reserved.

usage: LIB [options] [files]

   options:

      /DEF[:filename]
      /ERRORREPORT:{NONE|PROMPT|QUEUE|SEND}
      /EXPORT:symbol
      /EXTRACT:membername
      /INCLUDE:symbol
      /LIBPATH:dir
      /LINKREPRO:dir
      /LINKREPROFULLPATHRSP:filename
      /LINKREPROTARGET:filename
      /LIST[:filename]
      /LTCG
      /MACHINE:{ARM|ARM64|ARM64X|EBC|X64|X86}
      /NAME:filename
      /NODEFAULTLIB[:library]
      /NOLOGO
      /OUT:filename
      /REMOVE:membername
      /SUBSYSTEM:{BOOT_APPLICATION|CONSOLE|EFI_APPLICATION|
                  EFI_BOOT_SERVICE_DRIVER|EFI_ROM|EFI_RUNTIME_DRIVER|
                  NATIVE|POSIX|WINDOWS|WINDOWSCE}[,#[.##]]
      /VERBOSE
      /WX[:NO]
      /WX[:nnnn[,nnnn...]]
-----------
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
Pkg-config binary missing from cross or native file, or env var undefined.
Trying a default Pkg-config fallback at pkg-config
Found pkg-config: YES (C:\msys64\ucrt64\bin\pkg-config.EXE) 2.5.1
Determining dependency 'Qt6Core' with pkg-config executable 'C:\\msys64\\ucrt64\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --modversion Qt6Core` -> 0
stdout:
6.8.3
-----------
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --cflags Qt6Core` -> 0
stdout:
-IC:/Users/spapi/.conan2/p/qt587937845c546/p/include -IC:/Users/spapi/.conan2/p/qt587937845c546/p/include/QtCore -DQT_CORE_LIB -DQT_NO_DEBUG -IC:/Users/spapi/.conan2/p/qt587937845c546/p/mkspecs/win32-msvc -permissive- -Zc:__cplusplus -IC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/include -DPCRE2_STATIC -IC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/include -IC:/Users/spapi/.conan2/p/doubl397789b873e66/p/include -IC:/Users/spapi/.conan2/p/opens53b2260921422/p/include -IC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/include
-----------
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --libs Qt6Core` -> 0
stdout:
-LC:/Users/spapi/.conan2/p/qt587937845c546/p/lib -lQt6Core -lsynchronization -lruntimeobject -lauthz -lkernel32 -lnetapi32 -lole32 -lshell32 -luuid -lversion -lwinmm -lmpr -luserenv -LC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/lib -lpcre2-16-static -lpcre2-32-static -lpcre2-posix-static -lpcre2-8-static -LC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/lib -lbz2 -LC:/Users/spapi/.conan2/p/doubl397789b873e66/p/lib -ldouble-conversion -LC:/Users/spapi/.conan2/p/opens53b2260921422/p/lib -llibssl -llibcrypto -lcrypt32 -lws2_32 -ladvapi32 -luser32 -lbcrypt -LC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/lib -lzlib
-----------
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --libs Qt6Core` -> 0
stdout:
-LC:/Users/spapi/.conan2/p/qt587937845c546/p/lib -lQt6Core -lsynchronization -lruntimeobject -lauthz -lkernel32 -lnetapi32 -lole32 -lshell32 -luuid -lversion -lwinmm -lmpr -luserenv -LC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/lib -lpcre2-16-static -lpcre2-32-static -lpcre2-posix-static -lpcre2-8-static -LC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/lib -lbz2 -LC:/Users/spapi/.conan2/p/doubl397789b873e66/p/lib -ldouble-conversion -LC:/Users/spapi/.conan2/p/opens53b2260921422/p/lib -llibssl -llibcrypto -lcrypt32 -lws2_32 -ladvapi32 -luser32 -lbcrypt -LC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/lib -lzlib
-----------
Running compile:
Working directory:  C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\tmpgil9dzc7
Code:

        #include<stddef.h>
        #include<stdio.h>
        int main(void) {
            printf("%ld\n", (long)(sizeof(void *)));
            return 0;
        }
-----------
Command line: `cl C:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\tmpgil9dzc7\testfile.cpp /FeC:\Users\spapi\workspaces\cpp\qt6-app\build\meson-src\meson-private\tmpgil9dzc7\output.exe /nologo /showIncludes /utf-8 /Zc:__cplusplus /MD /nologo /showIncludes /utf-8 /Zc:__cplusplus /Od /Oi-` -> 0
stdout:
testfile.cpp
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\stddef.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt.h
Note: including file:   C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vcruntime.h
Note: including file:    C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\sal.h
Note: including file:     C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\concurrencysal.h
Note: including file:    C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vadefs.h
Note: including file: C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\stdio.h
Note: including file:  C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_wstdio.h
Note: including file:   C:\Program Files (x86)\Windows Kits\10\include\10.0.26100.0\ucrt\corecrt_stdio_config.h
-----------
Program stdout:

8

Program stderr:


Determining dependency 'Qt6Widgets' with pkg-config executable 'C:\\msys64\\ucrt64\\bin\\pkg-config.EXE'
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --modversion Qt6Widgets` -> 0
stdout:
6.8.3
-----------
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --cflags Qt6Widgets` -> 0
stdout:
-IC:/Users/spapi/.conan2/p/qt587937845c546/p/include -IC:/Users/spapi/.conan2/p/qt587937845c546/p/include/QtWidgets -DQT_WIDGETS_LIB -IC:/Users/spapi/.conan2/p/qt587937845c546/p/include/QtGui -DQT_GUI_LIB -IC:/Users/spapi/.conan2/p/harfbe18038c4151f2/p/include -IC:/Users/spapi/.conan2/p/harfbe18038c4151f2/p/include/harfbuzz -IC:/Users/spapi/.conan2/p/freet6b2bf47829fb9/p/include -IC:/Users/spapi/.conan2/p/freet6b2bf47829fb9/p/include/freetype2 -IC:/Users/spapi/.conan2/p/libpn78fad2678ed9a/p/include -IC:/Users/spapi/.conan2/p/brotl06f66710412ab/p/include -IC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/include -IC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/include/gio-win32-2.0 -IC:/Users/spapi/.conan2/p/libff30e278ad27691/p/include -DFFI_STATIC_BUILD -IC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/include/glib-2.0 -IC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/lib/glib-2.0/include -IC:/Users/spapi/.conan2/p/libge38d63f3d9c0c1/p/include -IC:/Users/spapi/.conan2/p/libic959babe6e3221/p/include -IC:/Users/spapi/.conan2/p/md4c668d8d4f42f4f/p/include -IC:/Users/spapi/.conan2/p/qt587937845c546/p/include/QtCore -DQT_CORE_LIB -DQT_NO_DEBUG -IC:/Users/spapi/.conan2/p/qt587937845c546/p/mkspecs/win32-msvc -permissive- -Zc:__cplusplus -IC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/include -DPCRE2_STATIC -IC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/include -IC:/Users/spapi/.conan2/p/doubl397789b873e66/p/include -IC:/Users/spapi/.conan2/p/opens53b2260921422/p/include -IC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/include
-----------
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --libs Qt6Widgets` -> 0
stdout:
-LC:/Users/spapi/.conan2/p/qt587937845c546/p/lib -lQt6Widgets C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_1.qtrccqrc_qstyle_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_2.qtrccqrc_qstyle1_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_3.qtrccqrc_qstyle_fusion_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_4.qtrccqrc_qmessagebox_init.cpp.obj -lQt6Gui -ld3d12 -luxtheme -ld2d1 -ld3d11 -ldwmapi -ldwrite -ldxgi -ldxguid -limm32 -loleaut32 -lsetupapi -lwinspool -lwtsapi32 -lshcore -lcomdlg32 -ld3d9 C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseGui_resources_1.qtrccqrc_qpdf_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseGui_resources_2.qtrccqrc_gui_shaders_init.cpp.obj -LC:/Users/spapi/.conan2/p/harfbe18038c4151f2/p/lib -lharfbuzz -lgdi32 -lrpcrt4 -lusp10 -LC:/Users/spapi/.conan2/p/freet6b2bf47829fb9/p/lib -lfreetype -LC:/Users/spapi/.conan2/p/libpn78fad2678ed9a/p/lib -llibpng16_static -LC:/Users/spapi/.conan2/p/brotl06f66710412ab/p/lib -lbrotlidec -lbrotlienc -lbrotlicommon -LC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/lib -lgthread-2.0 -lgio-2.0 -liphlpapi -ldnsapi -lshlwapi -lgobject-2.0 -LC:/Users/spapi/.conan2/p/libff30e278ad27691/p/lib -llibffi -lgmodule-2.0 -lglib-2.0 -LC:/Users/spapi/.conan2/p/libge38d63f3d9c0c1/p/lib -lgnuintl -LC:/Users/spapi/.conan2/p/libic959babe6e3221/p/lib -liconv -lcharset -LC:/Users/spapi/.conan2/p/md4c668d8d4f42f4f/p/lib -lmd4c-html -lmd4c -lQt6Core -lsynchronization -lruntimeobject -lauthz -lkernel32 -lnetapi32 -lole32 -lshell32 -luuid -lversion -lwinmm -lmpr -luserenv -LC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/lib -lpcre2-16-static -lpcre2-32-static -lpcre2-posix-static -lpcre2-8-static -LC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/lib -lbz2 -LC:/Users/spapi/.conan2/p/doubl397789b873e66/p/lib -ldouble-conversion -LC:/Users/spapi/.conan2/p/opens53b2260921422/p/lib -llibssl -llibcrypto -lcrypt32 -lws2_32 -ladvapi32 -luser32 -lbcrypt -LC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/lib -lzlib
-----------
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --libs Qt6Widgets` -> 0
stdout:
-LC:/Users/spapi/.conan2/p/qt587937845c546/p/lib -lQt6Widgets C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_1.qtrccqrc_qstyle_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_2.qtrccqrc_qstyle1_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_3.qtrccqrc_qstyle_fusion_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseWidgets_resources_4.qtrccqrc_qmessagebox_init.cpp.obj -lQt6Gui -ld3d12 -luxtheme -ld2d1 -ld3d11 -ldwmapi -ldwrite -ldxgi -ldxguid -limm32 -loleaut32 -lsetupapi -lwinspool -lwtsapi32 -lshcore -lcomdlg32 -ld3d9 C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseGui_resources_1.qtrccqrc_qpdf_init.cpp.obj C:Usersspapi.conan2pqt587937845c546plibobjects-ReleaseGui_resources_2.qtrccqrc_gui_shaders_init.cpp.obj -LC:/Users/spapi/.conan2/p/harfbe18038c4151f2/p/lib -lharfbuzz -lgdi32 -lrpcrt4 -lusp10 -LC:/Users/spapi/.conan2/p/freet6b2bf47829fb9/p/lib -lfreetype -LC:/Users/spapi/.conan2/p/libpn78fad2678ed9a/p/lib -llibpng16_static -LC:/Users/spapi/.conan2/p/brotl06f66710412ab/p/lib -lbrotlidec -lbrotlienc -lbrotlicommon -LC:/Users/spapi/.conan2/p/glib94601b4fa09e1/p/lib -lgthread-2.0 -lgio-2.0 -liphlpapi -ldnsapi -lshlwapi -lgobject-2.0 -LC:/Users/spapi/.conan2/p/libff30e278ad27691/p/lib -llibffi -lgmodule-2.0 -lglib-2.0 -LC:/Users/spapi/.conan2/p/libge38d63f3d9c0c1/p/lib -lgnuintl -LC:/Users/spapi/.conan2/p/libic959babe6e3221/p/lib -liconv -lcharset -LC:/Users/spapi/.conan2/p/md4c668d8d4f42f4f/p/lib -lmd4c-html -lmd4c -lQt6Core -lsynchronization -lruntimeobject -lauthz -lkernel32 -lnetapi32 -lole32 -lshell32 -luuid -lversion -lwinmm -lmpr -luserenv -LC:/Users/spapi/.conan2/p/pcre2418bd44ff7697/p/lib -lpcre2-16-static -lpcre2-32-static -lpcre2-posix-static -lpcre2-8-static -LC:/Users/spapi/.conan2/p/bzip2e1752ec0a98ec/p/lib -lbz2 -LC:/Users/spapi/.conan2/p/doubl397789b873e66/p/lib -ldouble-conversion -LC:/Users/spapi/.conan2/p/opens53b2260921422/p/lib -llibssl -llibcrypto -lcrypt32 -lws2_32 -ladvapi32 -luser32 -lbcrypt -LC:/Users/spapi/.conan2/p/zlib0e715158c1dfd/p/lib -lzlib
-----------
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --variable=bindir Qt6Core` -> 0
stdout:
C:/Users/spapi/.conan2/p/qt587937845c546/p/bin
-----------
Got pkg-config variable bindir : C:/Users/spapi/.conan2/p/qt587937845c546/p/bin
env[PKG_CONFIG_PATH]: C:/Workspaces/cpp/qt6-app/build
env[PKG_CONFIG]: C:\msys64\ucrt64\bin\pkg-config.EXE
-----------
Called: `C:\msys64\ucrt64\bin\pkg-config.EXE --variable=libexecdir Qt6Core` -> 0
stdout:
C:/Users/spapi/.conan2/p/qt587937845c546/p/libexec
-----------
Got pkg-config variable libexecdir : C:/Users/spapi/.conan2/p/qt587937845c546/p/libexec
Run-time dependency qt6 (modules: Core, Widgets) found: YES 6.8.3 (pkg-config)
Build targets in project: 1

my_qt6_app undefined

  User defined options
    Native files: build/conan_meson_native.ini

Found ninja-1.13.0.git.kitware.jobserver-pipe-1 at C:\Users\spapi\.local\bin\ninja.EXE
Command line for building ['my_qt6_app.exe'] is long, using a response file
